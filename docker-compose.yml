version: '3.8'
services:
  db:
    image: timescale/timescaledb:latest-pg14
    container_name: rithmic_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rithmic_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rithmic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: rithmic_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rithmic_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rithmic_collector
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: rithmic_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RITHMIC_USER: ${RITHMIC_USER}
      RITHMIC_PASSWORD: ${RITHMIC_PASSWORD}
      RITHMIC_SYSTEM_NAME: ${RITHMIC_SYSTEM_NAME}
      RITHMIC_APP_NAME: ${RITHMIC_APP_NAME}
      RITHMIC_APP_VERSION: ${RITHMIC_APP_VERSION}
      RITHMIC_URL: ${RITHMIC_URL}
      SYMBOLS: ${SYMBOLS}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      USE_RTRADER_PRO: ${USE_RTRADER_PRO:-false}
      RTRADER_HOST: ${RTRADER_HOST:-localhost}
      RTRADER_PORT: ${RTRADER_PORT:-65000}
    volumes:
      - ./collector.py:/app/collector.py
      - ./rtrader_collector.py:/app/rtrader_collector.py
      - ./rithmic_binary_collector.py:/app/rithmic_binary_collector.py
      - ./credentials:/app/credentials
    networks:
      - rithmic_network
    restart: unless-stopped
    command: python rithmic_binary_collector.py

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rithmic_api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: rithmic_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FLASK_ENV: ${FLASK_ENV:-development}
      FLASK_DEBUG: ${FLASK_DEBUG:-False}
    ports:
      - "5000:5000"
    volumes:
      - ./api.py:/app/api.py
    networks:
      - rithmic_network
    restart: unless-stopped
    command: python api.py

  nginx:
    image: nginx:alpine
    container_name: rithmic_nginx
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - rithmic_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  rithmic_network:
    driver: bridge